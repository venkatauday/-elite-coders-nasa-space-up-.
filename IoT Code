#define SENSOR  4 //D2(water flow)
#include &quot;DHT.h&quot;        // including the library of DHT11 temperature and humidity
sensor
#define DHTTYPE DHT11   // DHT 11
#define dht_dpin 0 //D3
#include &lt;Servo.h&gt;
#include &lt;Wire.h&gt;
#include &quot;DHT.h&quot;
#include &lt;LiquidCrystal_I2C.h&gt;
#include &lt;ESP8266WiFi.h&gt;
#include &lt;WiFiClient.h&gt;
#include &lt;ESP8266WebServer.h&gt;
#include &lt;ESP8266HTTPClient.h&gt;
 
long currentMillis = 0;
long previousMillis = 0;
int interval = 1000;
boolean ledState = LOW;
float calibrationFactor = 4.5;
volatile byte pulseCount;
byte pulse1Sec = 0;
float flowRate;
unsigned int flowMilliLitres;
unsigned long totalMilliLitres;
const int trigPin =16 ;  //D0
const int echoPin =5 ;  //D1
long duration;
int distance;
DHT dht(dht_dpin, DHTTYPE);
Servo servo;
void IRAM_ATTR pulseCounter()
{
  pulseCount++;
}
LiquidCrystal_I2C lcd(0x27, 16, 4);
//const char *ssid = &quot;IOTLAB&quot;;  //ENTER YOUR WIFI SETTINGS
//const char *password = &quot;iot@@bit&quot;;
//
//String humi, temp, postData,water,used,flow;
//const char *host = &quot;10.10.110.2&quot;;
void setup(){
  Serial.begin(9600);
  pinMode(SENSOR, INPUT_PULLUP);
  pulseCount = 0;
  flowRate = 0.0;
  flowMilliLitres = 0;
  totalMilliLitres = 0;
  previousMillis = 0;
  Wire.begin(D5, D6);
  attachInterrupt(digitalPinToInterrupt(SENSOR), pulseCounter, FALLING);
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT);
   pinMode(D7, OUTPUT); // Set buzzer - pin 9 as an output
  dht.begin();
  lcd.begin();
  lcd.home();
  //If connection successful show IP address in serial monitor
//lcd.print(&quot;Hello, NodeMCU&quot;);
  Serial.println(&quot;Humidity and temperature\n\n&quot;);
  servo.attach(2); //D4
  servo.write(0);
  delay(1000);
}
void loop()
{
digitalWrite(trigPin, LOW);
delayMicroseconds(2);
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);
duration = pulseIn(echoPin, HIGH);
distance= duration*0.034/2;
 String d =String(distance);
 
if (distance &lt; 10 )d = &quot;0&quot;+d;
if(distance &lt;5){
  servo.write(0);
  tone(D7, 1000); // Send 1KHz sound signal...
  delay(1000);        // ...for 1 sec
  noTone(D7);     // Stop sound...
  delay(1000);        // ...for 1sec
}
else servo.write(50);
  currentMillis = millis();
  if (currentMillis - previousMillis &gt; interval) {
    pulse1Sec = pulseCount;
    pulseCount = 0;
    flowRate = ((1000.0 / (millis() - previousMillis)) * pulse1Sec) / calibrationFactor;
    previousMillis = millis();
    flowMilliLitres = (flowRate / 60) * 1000;
    totalMilliLitres += flowMilliLitres;
    Serial.print(&quot;Flow rate: &quot;);
    Serial.print(int(flowRate));  // Print the integer part of the variable
    Serial.print(&quot;L/min&quot;);
    Serial.print(&quot;\t&quot;);       // Print tab space
    Serial.print(&quot;Output Liquid Quantity: &quot;);
    Serial.print(totalMilliLitres);
    Serial.print(&quot;mL / &quot;);
    Serial.print(totalMilliLitres / 1000);
    Serial.println(&quot;L&quot;);
  }
    int h = dht.readHumidity();
    int t = dht.readTemperature();
    String r = String(h);        
    Serial.print(&quot;Current humidity = &quot;);
    Serial.print(h);
    Serial.print(&quot;%  &quot;);
    Serial.print(&quot;temperature = &quot;);
    Serial.print(t);
    Serial.println(&quot;C  &quot;);
String flow = String( flowMilliLitres);  
lcd.setCursor(0,0);
lcd.print(&quot;temp:&quot;+String(t));
lcd.setCursor(0,1);
lcd.print(&quot;flow:&quot;+ flow+&quot;   &quot;+&quot;humi:&quot;+r);
lcd.setCursor(8,0);
 lcd.print(&quot;dist:&quot;+d);
//lcd.setCursor(9,0);
//lcd.print(t);
//lcd.setCursor(1,0);
//lcd.print(&quot;humidity&quot;+r);
//  delay(2000);
}
